.. _PageFills:

.. image:: /images/Pine_Script_logo_small.png
   :alt: Pine Script™
   :target: https://www.tradingview.com/pine-script-docs/en/v5/index.html
   :align: right
   :width: 50
   :height: 50

Fills
=====

The `fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__
function lets you color the background between either 
two plots plotted using `plot() <https://www.tradingview.com/pine-script-reference/v5/#fun_plot>`__
or two horizontal lines plotted using `hline() <https://www.tradingview.com/pine-script-reference/v5/#fun_hline>`__.

The function has two signatures:

.. code-block:: text

    fill(plot1, plot2, color, title, editable, show_last, fillgaps) → void
    fill(hline1, hline2, color, title, editable, fillgaps) → void

The IDs used as arguments in `fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__ calls
to specify which plots or hlines to fill between are of the special types :ref:`plot and hline <PlotAndHline>`.
They are generated by using the return value of 
`plot() <https://www.tradingview.com/pine-script-reference/v5/#fun_plot>`__ and
`hline() <https://www.tradingview.com/pine-script-reference/v5/#fun_hline>`__ calls.
`fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__ is the only built-in function
where these IDs are used.

See in this first example how the returning values of the
`plot() <https://www.tradingview.com/pine-script-reference/v5/#fun_plot>`__ and
`hline() <https://www.tradingview.com/pine-script-reference/v5/#fun_hline>`__ calls
are captured in the ``p1``, ``p2``, ``p3``, and ``h1``, ``h2``, ``h3`` and ``h4`` variables
for reuse as `fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__ arguments::

    //@version=5
    indicator("Example 1")
    p1 = plot(math.sin(high))
    p2 = plot(math.cos(low))
    p3 = plot(math.sin(close))
    fill(p1, p3, color.new(color.red, 90))
    fill(p2, p3, color.new(color.blue, 90))
    h1 = hline(0)
    h2 = hline(1.0)
    h3 = hline(0.5)
    h4 = hline(1.5)
    fill(h1, h2, color.new(color.yellow, 90))
    fill(h3, h4, color.new(color.lime, 90))

.. image:: images/Fills-Fill-1.png


Because `fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__
requires two IDs from the same function,
we sometimes need to use a `plot() <https://www.tradingview.com/pine-script-reference/v5/#fun_plot>`__
call where we would have otherwise used an `hline() <https://www.tradingview.com/pine-script-reference/v5/#fun_hline>`__
call, as in this example::

    //@version=5
    indicator("Example 2")
    src = close
    ma = ta.sma(src, 10)
    osc = 100 * (ma - src) / ma
    oscPlotID  = plot(osc)
    // An `hline()` would not work here because two `plot()` calls are needed.
    zeroPlotID = plot(0, "Zero", color.silver, 1, plot.style_circles)
    fill(oscPlotID, zeroPlotID, color.new(color.blue, 90))

.. image:: images/Fills-Fill-2.png


Because a "series color" can be used as an argument for the ``color`` parameter in
`fill() <https://www.tradingview.com/pine-script-reference/v5/#fun_fill>`__,
you can use constants like ``color.red`` or ``#FF001A``, as well as expressions 
calculating the color on each bar, as in this example::

    //@version=5
    indicator("Example 3", "", true)
    line1 = ta.sma(close, 5)
    line2 = ta.sma(close, 20)
    p1PlotID = plot(line1)
    p2PlotID = plot(line2)
    fill(p1PlotID, p2PlotID, line1 > line2 ? color.new(color.green, 90) : color.new(color.red, 90))

.. image:: images/Fills-Fill-3.png


.. image:: /images/TradingView-Logo-Block.svg
    :width: 200px
    :align: center
    :target: https://www.tradingview.com/


